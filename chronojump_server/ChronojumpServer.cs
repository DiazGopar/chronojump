// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 1.1.4322.2032
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

// 
// This source code was auto-generated by Mono Web Services Description Language Utility
//


/// <remarks/>
/// <remarks>
///ChronojumpServer
///</remarks>
[System.Web.Services.WebServiceBinding(Name="ChronojumpServerSoap", Namespace="http://www.sampleFakeWeb.org/")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public class ChronojumpServer : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    public ChronojumpServer() {
        this.Url = "http://localhost:8080/chronojumpServer.asmx";
    }
    
    /// <remarks>
///Conecta BBDD
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sampleFakeWeb.org/ConnectDatabase", RequestNamespace="http://www.sampleFakeWeb.org/", ResponseNamespace="http://www.sampleFakeWeb.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    public string ConnectDatabase() {
        object[] results = this.Invoke("ConnectDatabase", new object[0]);
        return ((string)(results[0]));
    }
    
    public System.IAsyncResult BeginConnectDatabase(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ConnectDatabase", new object[0], callback, asyncState);
    }
    
    public string EndConnectDatabase(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks>
///Select person name
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sampleFakeWeb.org/SelectPersonName", RequestNamespace="http://www.sampleFakeWeb.org/", ResponseNamespace="http://www.sampleFakeWeb.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    public string SelectPersonName(int personID) {
        object[] results = this.Invoke("SelectPersonName", new object[] {
            personID});
        return ((string)(results[0]));
    }
    
    public System.IAsyncResult BeginSelectPersonName(int personID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SelectPersonName", new object[] {
            personID}, callback, asyncState);
    }
    
    public string EndSelectPersonName(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks>
///See all persons
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sampleFakeWeb.org/SelectAllPersons", RequestNamespace="http://www.sampleFakeWeb.org/", ResponseNamespace="http://www.sampleFakeWeb.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    public string[] SelectAllPersons() {
        object[] results = this.Invoke("SelectAllPersons", new object[0]);
        return ((string[])(results[0]));
    }
    
    public System.IAsyncResult BeginSelectAllPersons(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SelectAllPersons", new object[0], callback, asyncState);
    }
    
    public string[] EndSelectAllPersons(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks>
///Select events from all persons
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sampleFakeWeb.org/SelectAllPersonEvents", RequestNamespace="http://www.sampleFakeWeb.org/", ResponseNamespace="http://www.sampleFakeWeb.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    public object[] SelectAllPersonEvents(int personID) {
        object[] results = this.Invoke("SelectAllPersonEvents", new object[] {
            personID});
        return ((object[])(results[0]));
    }
    
    public System.IAsyncResult BeginSelectAllPersonEvents(int personID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("SelectAllPersonEvents", new object[] {
            personID}, callback, asyncState);
    }
    
    public object[] EndSelectAllPersonEvents(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((object[])(results[0]));
    }
    
    /// <remarks>
///List directory files (only as a sample)
///</remarks>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.sampleFakeWeb.org/ListDirectory", RequestNamespace="http://www.sampleFakeWeb.org/", ResponseNamespace="http://www.sampleFakeWeb.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
    public string[] ListDirectory(string path) {
        object[] results = this.Invoke("ListDirectory", new object[] {
            path});
        return ((string[])(results[0]));
    }
    
    public System.IAsyncResult BeginListDirectory(string path, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ListDirectory", new object[] {
            path}, callback, asyncState);
    }
    
    public string[] EndListDirectory(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
}
