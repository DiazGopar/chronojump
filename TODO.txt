TODO:
----


stat.cs
	probably rewrite ALL the stat classes for supporting 1-n columns, 
	and knowing how many are they using for being able to delete them later.

rewrite the treeview_jumps and treeview_jumps_rj for using insertAfter and insertBefore, and not
have to rewrite all the time the treeview, and not have to remember the contracted values...
also no problems with the posicion of the scrollbar
perhaps it should be able to delete a row when a jump it's deleted, 
or move one row when we edit a jump an we selected that it's from another person



show better info in the RJ jump edit

move all the treeview_jumps and treeview_jumps_rj code from chronojump.cs to another file. Except the callbacks.
(For clarity and for later having the possibility of view multiple treeviews in other emerging windows)

correct the non-simulated rj jump
implement the non-simulated tj rime
implement the simulated tj rime

make appbar2.push show the different jumps as the are producing in RJ:
chronojump.cs, lines: 
			Console.WriteLine("trama: {0} {1} {2}", t0, t1, realTime(t2, t3) );
			string myString = "prova " + t0 + ", " + t1 + ", " + realTime(t2, t3) ;
			appbar2.Push( myString );


reimplement all the jumps as a sequence of values like:
SJ, CMJ, ABK	"1, 1" start inside, finish inside
DJ 		"0, 1" start outside, finish inside
Or something like this, or prevent some way of adding new jumps in the future without the need of change the DB.


- rj simulated and non simulated (NON-SIMULATED PENDING)


preference for wait until finish jump in RJ limited by time or don't wait

scrollbar of treeviews, has to remember the position (%) when we recreate the treeview (edit a jump, delete a jump...).
treeviews button of contract all and expand all

edit jump need the hability of change the DJ fall and the SJ+ weight

make an edit session and a delete session, the class, probably heredate from sessionload. The widget win is another


graph amb nplot
----------------
http://netcontrols.org/nplot/
verio de Miguel de Icaza amb Makefile:
http://www.bloglines.com/blog/Aakrosh?subid=3446357



make stat of current jumper (intrasession)

------------------------ intersessions start ------------------
INTERSESSION STATS SELECT (good) (dobule 'grouping by')

utilities 

(A) compare two or more sessions (like global in intrasession)

//select all jumps from two or more sessions and show the MAX (or AVG) of each type of jump in each session
SELECT type, MAX(tv), sessionID FROM jump  WHERE sessionID > 23 AND sessionID < 27 group by sessionID, type order by type, sessionid;
SELECT type, AVG(tv), sessionID FROM jump  WHERE sessionID > 23 AND sessionID < 27 group by sessionID, type order by type, sessionid;

we will show results like this:
	sess24	sess25	sess26	AVG	SD
ABK
CMJ
SJ
#AVG
#SD

(B) compare the evolution of one person in all jump types

//select all the MAX (or AVG) jumps of personID == 1 in all sessions:
select MAX(tv), type, sessionID from jump WHERE personID = 1 group by type, sessionID order by type, sessionID;


PERSONID == 1	we will show results like this:
	sess1	sess2	sess3	AVG	SD
ABK
CMJ
SJ
#AVG
#SD

(C) compare the evolution of a jump in different persons
select MAX(tv), personID, sessionID from jump WHERE type == "SJ" group by personID, sessionID order by personID, sessionID;

JUMP == "SJ"	we will show results like this:
	sess1	sess2	sess3	AVG	SD
jumper1
jumper2
jumper3
#AVG
#SD


----------------------------

OLD WAY (BAD):
	INTERSESSION: do all with the sql i know now (without left outer join)
	INTERSESSION SELECTS (but they need to return something for each row (also if there's no value), see LEFT JOIN

	+++select DJ index between two sessions (without sex):
	 SELECT MAX(100*((j1.tv-j1.tc)/j1.tc)), MAX(100*((j2.tv-j2.tc)/j2.tc))  FROM jump AS j1, jump AS j2  WHERE j1.sessionID == 1 AND j2.sessionID == 2 AND j1.type == j2.type;
	152.001785976726|46.9596162208521

	+++ select all jumps between two sessions (without sex):
	 SELECT j1.type, MAX(j1.tv), MAX(j2.tv)  FROM jump AS j1, jump AS j2  WHERE j1.sessionID == 1 AND j2.sessionID == 2 AND j1.type == j2.type group by j1.type; ???

	+++ tree sessions:
	 SELECT j1.type, MAX(j1.tv), MAX(j2.tv), MAX(j3.tv)  FROM jump AS j1, jump AS j2, jump AS j3  WHERE j1.sessionID == 1 AND j2.sessionID == 2 AND j3.sessionID == 3 AND j1.type == j2.type AND j1.type == j3.type group by j1.type;
	***
------------------------ intersessions end --------------------

- make the currentUser change when a user is selected in the treeview (with double click)
 (or edit this user)


- make global stats show tc and integrate rjs


+ make the intersession like this:
	- summary like global but with each column a different session (people have to preselect wich sessions to stat)
	- like before but for one person (not for all sessions)


- (HALF) Put a button for "cancel jump" (specially usefull if we selected we are using the platform)



- Capacitat de salt Total: (SJ+100%) + (sj-sj+100%) + (cmj-sj) + (abk-cmj) + (dj-abk)
(altura DJ ?). Aixo funciona, pero no agafa la linia si falta algun salt:
sqlite> SELECT j1.personID, person.name, (j1.tv + j2.tv-j1.tv + j3.tv-j2.tv + j4.tv-j3.tv + j5.tv-j4.tv) AS index_total, j1.tv AS index1, (j2.tv - j1.tv) AS index2, (j3.tv - j2.tv) AS index3, (j4.tv - j3.tv) AS index4, (j5.tv - j4.tv) AS index5 FROM jump AS j1, jump AS j2, jump AS j3, jump AS j4, jump AS j5, person WHERE j1.type="SJ+" and j1.weight="100%" and j2.type="SJ" AND j3.type="CMJ" AND j4.type="ABK" AND j5.type="DJ" AND j1.personID=j2.personID AND j2.personID=j3.personID AND j3.personID=j4.personID AND j4.personID=j5.personID AND j1.personID=person.uniqueID GROUP BY j1.personID;
2|pepa|0.0993004424028567|0.184782230008758|0.280872289780933|-0.280872289780933|-0.065258488461962|-0.0202232991439393
1|xavi1|0.186643592820803|0.465654519789691|-0.366973106920241|0.366973106920241|-0.002864390799247|-0.276146536169641

we can check the lines we need, and execute, and if a line it's not found, try to discover wich values are needed



- graf. capacitat de salt total


- video digital d'esportista per a mesurar angle de cames. NO, millor potenciometre que llanci la senyal al propi SqyGsalta, i que desde gsalta pugui fins-i-tot validar o anular un salt
- "rocket jump" (ABK flexió de menys de 90 º, casi total)
- "maximum" cursa i acció complerta (sense modificacions) (com un dj pero amb fall 0)



RJ time

editCurrentSession  (edit delete sessions (delete it's jumpers and jumps))



-stats intersession (global compare the maxs and averages):
STAT || sessioxx || sessio yyy || sessio zzz  (4 columns)
SJ MAX || 0.4956 Manel || 0.33454 pepe || 0.33445 jose  ||
CMJ MAX || 0.4956 Manel || 0.33454 pepe || 0.33445 jose ||
-same with SJ rank, cmj rank, ...

-stats: put a button for "graph this stat")

continue the :
expandCurrentJumperIfNeeded ();
private void expandCurrentJumperIfNeeded ()


